
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA COMP DIFERENTE DIVIDE DOT ELGIO ENTAO EQUALS FIM FUNCTION_ID GT ID IGUAL INICIO INTEIRO LPAREN LT MAIOR MENOR MINUS NUMBER PLUS RPAREN SE SENAO TIMES ZEROprograma : funcao blocofuncao : INTEIRO ID LPAREN parametros RPAREN DOTparametros : parametro\n| parametro COMMA parametrosparametro : INTEIRO IDbloco : INICIO DOT comandos FIM DOTcomandos : comando\n| comando comandoscomando : ID EQUALS expressao DOTcomando : ELGIO EQUALS expressao DOTcomando : SE expressao DOT comando senao_opcional FIM DOTsenao_opcional : SENAO DOT comando\n| vazioexpressao : expressao PLUS expressao\n| expressao MINUS expressao\n| expressao TIMES expressao\n| expressao DIVIDE expressao\n| expressao GT expressao\n| expressao LT expressao\n| expressao EQUALS expressaoexpressao : ID\n| NUMBERvazio :'
    
_lr_action_items = {'INTEIRO':([0,8,26,],[3,14,14,]),'$end':([1,4,27,],[0,-1,-6,]),'INICIO':([2,38,],[5,-2,]),'ID':([3,7,10,13,14,19,20,30,31,32,33,34,35,36,37,40,41,54,55,],[6,11,11,22,24,22,22,11,22,22,22,22,22,22,22,-9,-10,11,-11,]),'DOT':([5,17,21,22,23,25,28,29,43,44,45,46,47,48,49,51,53,],[7,27,30,-21,-22,38,40,41,-14,-15,-16,-17,-18,-19,-20,54,55,]),'LPAREN':([6,],[8,]),'ELGIO':([7,10,30,40,41,54,55,],[12,12,12,-9,-10,12,-11,]),'SE':([7,10,30,40,41,54,55,],[13,13,13,-9,-10,13,-11,]),'FIM':([9,10,18,40,41,42,50,52,55,56,],[17,-7,-8,-9,-10,-23,53,-13,-11,-12,]),'EQUALS':([11,12,21,22,23,28,29,43,44,45,46,47,48,49,],[19,20,37,-21,-22,37,37,37,37,37,37,37,37,37,]),'NUMBER':([13,19,20,31,32,33,34,35,36,37,],[23,23,23,23,23,23,23,23,23,23,]),'RPAREN':([15,16,24,39,],[25,-3,-5,-4,]),'COMMA':([16,24,],[26,-5,]),'PLUS':([21,22,23,28,29,43,44,45,46,47,48,49,],[31,-21,-22,31,31,31,31,31,31,31,31,31,]),'MINUS':([21,22,23,28,29,43,44,45,46,47,48,49,],[32,-21,-22,32,32,32,32,32,32,32,32,32,]),'TIMES':([21,22,23,28,29,43,44,45,46,47,48,49,],[33,-21,-22,33,33,33,33,33,33,33,33,33,]),'DIVIDE':([21,22,23,28,29,43,44,45,46,47,48,49,],[34,-21,-22,34,34,34,34,34,34,34,34,34,]),'GT':([21,22,23,28,29,43,44,45,46,47,48,49,],[35,-21,-22,35,35,35,35,35,35,35,35,35,]),'LT':([21,22,23,28,29,43,44,45,46,47,48,49,],[36,-21,-22,36,36,36,36,36,36,36,36,36,]),'SENAO':([40,41,42,55,],[-9,-10,51,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'funcao':([0,],[2,]),'bloco':([2,],[4,]),'comandos':([7,10,],[9,18,]),'comando':([7,10,30,54,],[10,10,42,56,]),'parametros':([8,26,],[15,39,]),'parametro':([8,26,],[16,16,]),'expressao':([13,19,20,31,32,33,34,35,36,37,],[21,28,29,43,44,45,46,47,48,49,]),'senao_opcional':([42,],[50,]),'vazio':([42,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> funcao bloco','programa',2,'p_programa','elgol_parser.py',6),
  ('funcao -> INTEIRO ID LPAREN parametros RPAREN DOT','funcao',6,'p_funcao','elgol_parser.py',10),
  ('parametros -> parametro','parametros',1,'p_parametros','elgol_parser.py',14),
  ('parametros -> parametro COMMA parametros','parametros',3,'p_parametros','elgol_parser.py',15),
  ('parametro -> INTEIRO ID','parametro',2,'p_parametro','elgol_parser.py',22),
  ('bloco -> INICIO DOT comandos FIM DOT','bloco',5,'p_bloco','elgol_parser.py',26),
  ('comandos -> comando','comandos',1,'p_comandos','elgol_parser.py',30),
  ('comandos -> comando comandos','comandos',2,'p_comandos','elgol_parser.py',31),
  ('comando -> ID EQUALS expressao DOT','comando',4,'p_comando_atribuicao','elgol_parser.py',38),
  ('comando -> ELGIO EQUALS expressao DOT','comando',4,'p_comando_atribuicao_elgio','elgol_parser.py',42),
  ('comando -> SE expressao DOT comando senao_opcional FIM DOT','comando',7,'p_comando_se','elgol_parser.py',46),
  ('senao_opcional -> SENAO DOT comando','senao_opcional',3,'p_senao_opcional','elgol_parser.py',50),
  ('senao_opcional -> vazio','senao_opcional',1,'p_senao_opcional','elgol_parser.py',51),
  ('expressao -> expressao PLUS expressao','expressao',3,'p_expressao_binaria','elgol_parser.py',58),
  ('expressao -> expressao MINUS expressao','expressao',3,'p_expressao_binaria','elgol_parser.py',59),
  ('expressao -> expressao TIMES expressao','expressao',3,'p_expressao_binaria','elgol_parser.py',60),
  ('expressao -> expressao DIVIDE expressao','expressao',3,'p_expressao_binaria','elgol_parser.py',61),
  ('expressao -> expressao GT expressao','expressao',3,'p_expressao_binaria','elgol_parser.py',62),
  ('expressao -> expressao LT expressao','expressao',3,'p_expressao_binaria','elgol_parser.py',63),
  ('expressao -> expressao EQUALS expressao','expressao',3,'p_expressao_binaria','elgol_parser.py',64),
  ('expressao -> ID','expressao',1,'p_expressao_termo','elgol_parser.py',68),
  ('expressao -> NUMBER','expressao',1,'p_expressao_termo','elgol_parser.py',69),
  ('vazio -> <empty>','vazio',0,'p_vazio','elgol_parser.py',73),
]
